<?phpnamespace app\admin\controller;use app\common\model\Nav as NavModel;use think\Config;use app\common\model\Banner as BannerModel;use think\Request;class Nav extends Auth{    public $type = ['1' => '首页导航', 2 => '个人中心'];    public function page()    {        $page = Config::get('page');        if (request()->isGet()) {            if (input('param.id')) {//                halt(input('param.id'));                $bannerInfo = NavModel::find(input('param.id'));//                dump($bannerInfo['path_index']);                if (!empty($bannerInfo['path_index'])) {                    $this->assign('ext', $bannerInfo['path_index']);                    if ($bannerInfo['path_index'] == input('param.index')) {                        $this->assign('extInfo', unserialize($bannerInfo['ext']));                    } else {                        $this->assign('extInfo', null);                    }                } else {                    $this->assign('extInfo', null);                }                $this->assign('nav_id', input('param.id'));            }            if (input('param.index') || input('param.index') == 0) {                $this->assign('ext', input('param.index'));            }        }        if (request()->isPost()) {            $data = request()->post()['data'];            $pathInfo = $page[$data['page']];            $updateData = [                'ext' => '',                'ext_str' => '',                'path_index' => $data['page'],                'path' => $pathInfo['addr'],            ];            if (!empty(request()->post()['details'])) {                $details = request()->post()['details'];                $extStr = '';                foreach ($pathInfo['ext'] as $key => $value) {                    if ($key == 0) {                        $extStr .= '?';                    } else {                        $extStr .= '&';                    }                    $extStr .= $value . '=' . $details[$key];                }                $updateData['ext'] = serialize($details);                $updateData['ext_str'] = $extStr;            }//            halt($data['nav_id']);            $res = NavModel::where('nav_id', $data['nav_id'])->update($updateData);            return $res ? json_encode([200, '操作成功！']) : json_encode([400, '操作失败！']);//            $this->assign('ext',input('param.index'));        }        $this->assign('page', $page);//        dump($page);        return $this->fetch();    }    /**     * 首页     */    public function index(Request $request)    {        $param = $request->param();        $where = $search = [];        if ($param['nav_type']) {            $where['nav_type'] = $param['nav_type'];            $search['nav_type'] = $param['nav_type'];        }        $config = Config::get('admin');        $page = Config::get('page');        // dump($config);        return $this->fetch('', [            'page' => $page,            'data' => NavModel::where($where)->order('nav_type,sort desc')->paginate($config['paginate']),            'type' => $this->type,            'search' => $search        ]);    }    public function edit()    {        if ($this->request->isPost()) {            $param = $this->request->param()['data'];//            halt($param);            $res = NavModel::update([                'nav_title' => $param['nav_title'],                'nav_type' => $param['nav_type'],                'cover_src' => $param['cover_src'],            ], [                'nav_id' => $param['nav_id'],            ]);            return $res ? json_encode([200, '修改成功']) : json_encode([400, '修改失败']);        } else {            $data = NavModel::where(['nav_id' => input('param.id')])->find();            return view(null, ['data' => $data, 'type' => $this->type]);        }    }    public function SynUpload()    {        $file = request()->file('file');        if (!$file) {            return $this->fetch();        }        $path = 'uploads/nav';        $info = $file->move($path);        $resImageInfo = $path . '/' . $info->getSaveName();        $image = \think\Image::open($resImageInfo);        $image->thumb(500, 500)->save($resImageInfo);        if ($info) {            return $this->result($resImageInfo, 200, '成功');        } else {            return $this->result($file->getError(), 400, '失败');        }    }    public function add()    {        if ($this->request->isPost()) {            $param = $this->request->param()['data'];            $res = NavModel::create([                'nav_title' => $param['nav_title'],                'nav_type' => $param['nav_type'],                'cover_src' => $param['cover_src'],                'add_time' => time(),                'sort' => 1            ]);            return $res ? json_encode([200, '添加成功']) : json_encode([400, '添加失败']);        } else {            return view(null, ['type' => $this->type]);        }    }    /**     * 修改状态     */    public function editstatus()    {        $param = input('param.');        $NavModel = new NavModel();        $result = $NavModel->save(            [                'display' => $param['value']            ], [                'nav_id' => $param['id']            ]        );        return $result ? json_encode([200, '修改成功！']) : json_encode([400, '修改失败！']);    }    /**     * 排序     */    public function editsort()    {        $param = input('param.');        $NavModel = new NavModel();        $result = $NavModel->save(            [                'sort' => $param['value']            ], [                'nav_id' => $param['id']            ]        );        return $result ? json_encode([200, '修改成功！']) : json_encode([400, '修改失败！']);    }    public function del()    {        $id = input('param.id');        $Banner = NavModel::get($id);        $url = ROOT_PATH . $Banner->cover_src;        if (file_exists($url)) {            unlink($url);            clearstatcache();        }        $result = NavModel::destroy($id);        return $msg = $result ? '删除成功' : '删除失败';    }    public function delall()    {        $id = input('param.id/a');        if (empty($id)) return '请选中后操作！';        $idArr = implode(',', $id);        $bannerArr = NavModel::where('nav_id', 'in', $idArr)->field('cover_src')->select();        foreach ($bannerArr as $key => $value) {            $path = ROOT_PATH . $value['cover_src'];            if (file_exists($path)) {                unlink($path);                clearstatcache();            }        }        $result = NavModel::destroy($idArr);        return $msg = $result ? json_encode([200, '删除成功']) : json_encode([400, '删除失败']);    }}